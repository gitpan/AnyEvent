Revision history for Perl extension AnyEvent.

4.331 Tue Jan  6 21:07:25 CET 2009
	- socketpair fails on many vista machines because vista has
          completely broken accept/getpeername and getsockname functions,
          so we provide our own socketpair emulation that kind of works
          (AnyEvent::Util::portable_pipe).
        - new function: AnyEvent::Util::portable_socketpair.
	- take advantage of the Guard module if it exists.

4.33 Fri Nov 21 02:35:40 CET 2008
	- AnyEvent::Strict did errornously flag a fileno of 0 as
          illegal.
	- reduce memory usage and slightly speed up the pure perl backend
          by only storing the file descriptor, not the file handle.
        - add missing autocork method to AnyEvent::Handle (reported
          by Adam Rosenstein).
        - AnyEvent::DNS->resolve errornously documented an $rcode result
          argument, but there isn't (spotted by Henrik Krohns).
        - the naked truth about Tk - it's basically unmaintained.

4.32 Mon Nov  3 22:46:32 CET 2008
	- fix AnyEvent::Socket::resolve_sockaddr to properly support
          unix sockets again and choose a proper default for
          the socket type.
        - fix call to resolve_sockaddr in tcp_connect.

4.31 Thu Oct 30 04:41:48 CET 2008
	- implemented AnyEvent::Handle->destroy method.
	- hint about unexpected effects in TLS mode.
        - speed up AnyEvent::Impl::Perl by using more arrays
          instead of hashes without the slightest loss of readability :)
        - work around a perl argument refcounting bug.
        - with some perl patches applied, AnyEvent now seems leak-free.

4.3  Fri Oct  3 09:18:43 CEST 2008
	- AnyEvent will now install a no-op signal handler for SIGPIPE,
          unless one has been installed already.
        - warn about not loaidng AnyEvent::Impl::POE early enough
          (patch by Adam Rosenstein).
	- fixed a great number of bugs and corner cases in AnyEvent::Handle:
        - fix a bug in where in SSL connect mode, the
          client would first wait for some data by the server and
          otherwise hang. (reported and analyzed in an absolutely
          exemplary manner by Adam Rosenstein).
        - fix a bug in where SSL EOF would not be treated
          as stream EOF, putting the connection into a hung state.
          (reported and analyzed in an absolutely exemplary manner by Adam
          Rosenstein).
        - fix a potential segfault when the TLS context
          would go missing in a read callback (e.g. due to stoptls) -
          Net::SSLeay of course makes no type checking whatsoever.
        - AnyEvent::Handle will not stop the read watcher in TLS mode.
        - AnyEvent::Handle->stoptls will send a TLS close notify
          instead of simply destroying the stream now.
        - fix a bug where large blocks of data written in TLS mode
          would not be sent unless triggered by receives.
        - on_drain will now take the tls write buffer into account.
        - SSL operations have been streamlined a bit and should be faster
          now, more to come, though.
        - added a FAQ section, will document nontrivial issues in there.

4.234 Mon Sep 29 04:08:13 CEST 2008
	- fix child watcher documentation: only child exits will be reported,
          no trace events.
        - mention SIGPIPE in AnyEvent::Handle.
	- perl backend will now use POSIX::times as monotonic clock
          when available and the monotonic clock option is not.
        - run even without Time::HiRes in some cases now, but do not
          provide sub-second accuracy (all *supported* perl versions have
          Time::HiRes).

4.233 Fri Aug 22 01:48:05 CEST 2008
	- fix a bug in the testsuite, causing a hang.
        - clarified lots of AnyEvent::Handle constructor arguments.

4.232 Thu Aug 21 20:44:25 CEST 2008
	- fix a bug in AnyEvent::Handle that could cause two fatal error
          callbacks on EOF, which caused AnyEvent::HTTP to signal success twice
          (testcase by Leon Brocard).
        - clarified on_eof/on_error documentation a bit.

4.231 Tue Jul 29 13:12:15 CEST 2008
        - remove some debugging code left in AnyEvent::Util::fork_call
          (and no, it's impossible to implement with the broken windows
          perls without resource leaks or worse).

4.23 Tue Jul 29 12:19:59 CEST 2008
	- document the first parameter passed to condvar callbacks to be
          the callback.
        - add AnyEvent::Socket::{ntoa,aton} aliases.
        - optimize the AE::Handle->push_read (line) for the default
          eol marker.
        - optimize push_read (packstring|storable) for small packets.
        - invoke on_error callback when no on_eof callback is set.
        - fix a bug in push_read (storable) of unknown impact.

4.22 Sun Jul 20 16:34:13 CEST 2008
	- new function AnyEvent::Socket::parse_hostport.
        - as the bulkheads at microsoft can't even get getprotobyname reliably
          working on their shitty fucking broken os we need to hardcode
          some common protocol numbers in AnyEvent::Socket. How can
          people even bother with such a pile of shit as windows.

4.21 Thu Jul 17 14:40:05 CEST 2008
	- INCOMPATIBLE CHANGE: AnyEvent::Util::fork_call now has a prototype
          which is incompatible to previous invocation syntax.
        - work around more windows perl bugs in fork_call. I cannot imagine
          why anybody would bother implementing fork in such an obviously
          unusable way.
	- avoid calling $do_retry if the request has already finished in
          AnyEvent::DNS, thus avoiding an exception (reported by Anatoly
          K. Sharifulin).

4.2  Sat Jul 12 22:42:11 CEST 2008
	- support an "interval" argument for repeating timers.
        - fix a bug in the pure perl event loop that caused timers to
          be delayed under some circumstances.
        - implement optional argument checking via PERL_ANYEVENT_STRICT.
	- not importing anything from Event causes it to malfunction
          and not use Time::HiRes, work around this bug.
        - more bug workarounds against the endlessly broken Tk module,
          seems to work now on 32 bit machines, but less so on 64 bit.
        - minor optimisations applied to most backends.

4.161 Fri Jul  4 14:24:48 CEST 2008
        - fixed the t/handle/02_write.t, it read after write, with the
          assumption that all data could be written before read
          (reported by Jim Razmus).

4.160 Thu Jul  3 04:02:21 CEST 2008
	- re-registering signal watchers after unregistering one did
          not work if a backend falls back on AnyEvent's default
          implementation (also affected child watchers).
	- new AnyEvent::Handle options: autocork and no_delay.

4.152 Sun Jun 22 14:15:44 CEST 2008
	- allow for 32-bit perls that implement shifts differently
          on different architectures in parse_ipv4 (reported and
          analysed by Keiichi DAIBA).

4.151 Fri Jun  6 17:34:24 CEST 2008
	- make sure specifying _only_ on_read and never pushing reads
          works.

4.15 Fri Jun  6 13:00:46 CEST 2008
	- the pure perl backend would keep some watchers alive when more than
          one watcher was registered for the same fd.
	- new "packstring" and "storable" read and write types
          for AnyEvent::Handle.
        - allow on_eof handler to be called after on_error with EPIPE returns.
        - do not immediately call on_read callback in handle constructor.

4.14 Thu Jun  5 20:29:31 CEST 2008
        - Fixed a bug in DNS SRV priority sorting.
        - AnyEvent::Util::guard now reports runtime errors while
          executing the guard block as warnings.
        - handle 0-byte-reads just before EOF correctly in AnyEvent::Handle.

4.13 Thu Jun  5 00:47:59 CEST 2008
	- AnyEvent::DNS only followed cname chains with length 2,
          contrary to documentation. bumped it up to 10, thanks to
          microsoft, the current broken-dns-config-king.
        - AnyEvent::DNS didn't check for socket return status
          but instead relied on perl not creating filehandles in that
          case - too bad it gives you a bogus file handle (reported
          and analysed by Vladimir Timofeev).
	- fix queue management logic in AnyEvent::Handle:
          when on_read was registered, the queue was empty
          and no progress could be made AnyEvent::Handle would
          enter an endless loop.
        - correctly start reading again when the handle became
          busy again after idling.
        - correctly treat tls shut-downs as EOF condition
          (for the time being, would be nice to have a callback for that).
        - correctly call eof callback under all conditions
          (hopefully).
        - the timeout callback did not expect that $self can go
          away any time.

4.12 Tue Jun  3 10:58:04 CEST 2008
	- include AnyEvent::Intro, a tutorial for anyevent,
          anyevent::socket and anyevent::handle.
        - allow more options in on_error.

4.11 Fri May 30 23:42:25 CEST 2008
        - INCOMPATIBLE CHANGE: replace ptr by real PTR lookup, provide
          reverse_lookup and reverse_verify to replace it, support
          v4mapped and v4compat addresses.
	- provide more documentation for the resolver class.
        - really replace longest run of :0: by :: in format_address,
          also properly convert :: and ::1 again.
        - support NAPTR record name and decode it.
        - implement random weight sampling for SRV records, as per
          rfc 2782.
        - correctly abort on srv-record targets of ".".
        - added AnyEvent::DNS::wait_for_slot.
        - in the unlikely event of a virtual circuit connection
          being invalidated by a delayed udp reply, AnyEvent::DNS
          could die. this has been fixed.
        - plug a probable memleak in the DNS vc code.
        - use configured timeout also for VC request phase.
        - implement timeout and max_outstanding methods
          for resolver class.
        - update version numbers in all modules.

4.1  Thu May 29 05:45:40 CEST 2008
	- INCOMPATIBLE CHANGE: renamed xxx_ip functions to xxx_address
          which mirrors their purpose better (old names still available
          for a while). Also moved AnyEvent::DNS::addr to
          AnyEvent::Socket::resolve_sockaddr.
	- implement AnyEvent->time and AnyEvent->now.
        - fix IPv6 support in pack_sockaddr.
	- officially un-experimentalise all newly introduced code.
        - support unix domain sockets everywhere by specifying
          a host of "unix/" and the pathname as service.
        - implement an activity timeout in AnyEvent::Handle.
	- added a regex read type to AnyEvent::Handle.
	- added a json read/write type to AnyEvent::Handle.
        - always croak in on_error in AnyEvent::Handle.
        - document how to subclass AnyEvent::Handle.
        - implement AnyEvent::Util::fork_call.
        - add support for IPv6 nameservers and nameserver statements.
        - work around _yet_ _another_ windows perl bug in where empty
          select masks cause errors in the pure perl backend (this
          workaround cannot be implemented for the other event loops,
          but EV also works around this).
        - supply AnyEvent::Socket::address_type and make good use of it.
        - clarify and fix the Handle documentation w.r.t $self vs. $handle
          vs. callback arguments.
	- add some recommends to the META.yml.

4.05 Mon May 26 19:44:06 CEST 2008
        - some platforms ignore the rfc and prepend an extra sa_len member to
          the sockaddr structure, cater for those. also use sockaddr_family,
          didn't know it was there, but comes in handy for the workaround.
	- undo the import WIN32 hack.

4.04 Mon May 26 08:03:31 CEST 2008
	- try to work around yet another windows bug: failed connects are reported
          as if it were out-of-band data. windows users: you suck. Only
          EV, Glib, Event and the pure perl backend can handle this condition.
        - optimize write algorithm in AnyEvent::Handle.
	- properly parse PERL_ANYEVENT_PROTOCOLS and use the info correctly.
        - tcp_connect now properly iterates through all targets.
	- check wether IPv6 sockets can actually be created, otherwise, disable ipv6
          support entirely. also hardcode some AF_INET6 constants for the
          sake of perl 5.8.
        - vastly improved nameserver/suffix detection algorithm for windows
          (still a hack...)
        - try to use a fallback dns server if no dns servers could be found.
        - splatter around some local $SIG{__DIE__}'s to work around bad
          die handlers.

4.03 Sun May 25 05:05:57 CEST 2008
	- work around perl bugs on windows, where perl returns undocumented
          error codes for sysread, syswrite etc.
	- fix AnyEvent::Handle::unshift_read to really unshift and not push.
        - AnyEvent::Handle could sometimes stumble over 0-byte writes.
        - fix unpack_sockaddr, now works for AF_INET6 sockaddr's.
        - updated documentation.
        - lots of workarounds for perl 5.8 quirks.
        - implement a more flexible type system for both reads and writes
          in AnyEvent::Handle.
        - support IPv6 in tcp_server.
        - pass local hostname and port to the prepare callback in tcp_server.
        - make types extendable in AnyEvent::Handle.
        - croak, not die, in AnyEvent::Handle;

4.0  Sat May 24 19:58:08 CEST 2008
	- added (experimental) AnyEvent::DNS module.
        - added (experimental) AnyEvent::Socket module.
        - added (experiemntal) support for TLS/SSL in AnyEvent::Handle.
        - make condvar->end call ->send as documented.
        - make condvar constructor support the documented cb => argument.
        - overload condvars so you can use them instead of code references.
        - support more of the POSIX forms instead of a pure dotted quad for
          verbatim ip addresses.
        - AnyEvent::Socket::inet_aton will use AnyEvent::DNS now and not fork anymore.
	- try very hard not to freeze on broken windows perls.
        - make on_eof optional in AnyEvent::Handle.
	- support service names in tcp_connect and tcp_server.
        - work around netbsd/openbsd bug causing unix sockets not to
          become writable until empty.
	- only make a dummy read for error detection when getpeername
          returns ENOTCONN.
        - defend AnyEvent::Util::inet_aton against Coro::LWP's brutal
          override.
        - new AnyEvent::Guard::cancel.

3.5  Sat May 17 23:17:14 CEST 2008
	- gracefully deal with systems not defining CLOCK_MONOTONIC
          (as opposed to not supporting the clock itself, which worked in 3.41).
	- added AnyEvent::Util::tcp_connect and AnyEvent::Util::tcp_server
          helpers, to replace the ill-designed AnyEvent::Socket class.
	- added some examples (eg/connect, eg/handle).
	- added AnyEvent::Util::guard.
        - AnyEvent::Util now exports most of its functions.
	- fixed a bug in *_read_chunk, where the callback was called with $self as
          first and second argument.
        - simplified and fixed regex handling in AnyEvent::Handle::*_read_line.
	- fix manpage condvars examples to use new syntax.
        - considerably improve inet_aton with EV::ADNS backend to support
          cname chains (common dns configuration bug, e.g. with www.google.de)
          and aaaa records if no a record could be found.

3.41 Sun May 11 19:53:13 CEST 2008
	- work around a bug in perl 5.8.8's local. Reported by Yi Ma Mao.

3.4  Sun May 11 00:29:25 CEST 2008
	- complete re-implementation of condvars with a hopefully much more useful
          API (backward compatible functions exist but are undocumented).
	- AnyEvent::Handle fully rewritten with a hopefully more powerful API
          (still subject to change).
	- take advantage of CLOCK_MONOTONIC, if available, in AnyEvent::Impl::Perl.
        - provide AnyEvent::post_detect and @AnyEvent::post_detect, which
          allows module authors to avoid forcing event loop detection.
          (used by Coro::AIO, Coro::BDB, Coro::AnyEvent for example).
        - remove coro backends: Coro now provides generic support for AnyEvent
          via Coro::AnyEvent.

3.3  Mon Apr 28 09:51:06 CEST 2008
        - added AnyEvent::Handle, AnyEvent::Socket and AnyEvent::Util modules.
        - fix a bug in the pure perl backend that kept watchers alive
          when multiple watchers were registered for the same fh/poll combo.
	- add a benchmark section showing AnyEvent overhead and comparing
          the different event loops with each other.
        - prefer pure perl over tk when autoprobing, as it's about as fast,
          but doesn't crash with many watchers.
	- declare Qt support non-experimental.
        - clarify the confusing section about the file descriptor being
          kept alive.
        - document the race between loading of an event module and
          child processes exiting.
        - support POE as "backend" (with some caveats, POE is not generic
          enough, and darn slow).
        - support Wx and Prima through POE.
        - optimise perl backend to use 20% less memory and take advantage
          of typical timeout behaviour. It can now compete with
          select/poll-based C event loops in most cases (it is usually
          faster than Event and Glib :).
        - roughly cut EV memory use in half and increase its speed by 30%,
          by removing undocumented functionality. Did something similar
          to other event loops where possible.

3.2  Thu Apr 24 10:10:40 CEST 2008
	- do not die when anyevent watchers are destroyed while running callbacks
          in the pureperl backend (could only happen when two watchers are registered
          for the same fh/poll combo).
        - support autoloading for child watchers, was broken in all versions.
	- implement PERL_ANYEVENT_MODEL env variable.
        - (experimental) implement interface to the (very crashy/buggy) Event::Lib module.
        - (experimental) implement interface to the Qt module (cannot be autoprobed).
        - this release is IO:AnyEvent-proof.

3.12 Tue Apr 22 07:11:46 CEST 2008
	- reinstate AUTHOR section that got lost somehow.
        - do not hang in the testsuite with badly broken perls (activestate,
          strawberry...), but instead diagnose the problem and continue.
        - use INT instead of CHLD in an attempt to support broken windows perls
          better (this decreases the test quality, unfortunately).
        - do not send the signal to the process group
          (no problem for CHLD, bad for INT :).

3.11 Sat Apr 19 06:57:31 CEST 2008
	- major documentation rework.
        - document the fact that child watchers only watch for zombies.
        - fix the child watcher example.

3.1  Wed Apr 16 17:09:01 CEST 2008
	- work around recurring bugs in Tk by dup'ing filehandles, the
          only method with good success chances on Tk (the bugs apparently
          don't get fixed anytime soon).
        - lift the restriction of only one watcher per fh direction
          (as the Tk bug workaround also lifts it and only Tk imposed
          such strong limits).
        - changed probe order to prefer coro adaptors.
        - explain why recursion into the event loop is not supported
          unless the backend supports it (only Coro::EV does without
          any restrictions...).
        - add simple manpages for all backend modules.

3.0  Mon Apr  7 21:30:23 CEST 2008
	- Coro::Signal changed semantics, roll our own, also cleaning
          up the Coro implementation in general.
        - rename Coro backend to CoroEvent.
        - add some decision helping paragraph to the manpage that should
          help people to decide whether AnyEvent is the right thing for them.

2.9  Mon Jan 28 13:31:54 CET 2008
	- update for EV 3.0 API changes.

2.8  Sun Nov 25 15:06:03 CET 2007
	- waitpid can validly return 0. accept this fact of life
          instead of reporting it to any watchers.

2.7  Fri Nov 23 11:41:14 CET 2007
	- force use of AnyEvent::Impl::Perl in testsuite, there is
          too much breakage outside AnyEvent.
        - deliver signals synchronously in AnyEvent::Impl::Perl
          or any other event loop that relies on AnyEvents child
          watcher emulation. *Could* help with hanging testsuite
          (except when Event or EV are installed).

2.6  Fri Nov  9 20:36:35 CET 2007
	- fix bug in testsuite.
        - move EV adaptor modules to AnyEvent.
        - add Coro+EV adaptor module.

2.55 Tue Nov  6 17:41:32 CET 2007
	- add EV to the list of supported event models.
        - do not auto-reset pid watchers, pass pid and status to them.
        - allow a pid of zero to watch for all children in child watchers.

2.54 Wed Jul 18 17:36:23 CEST 2007
	- work around a perl bug that results in
          BEGIN not safe after errors--compilation aborted without
          any discernible reason or error message by once
          again not use'ing strict.

2.53 Sun Jul  8 10:51:53 CEST 2007
	- make Glib interface work again (spotted by elmex).

2.52 Wed Mar  7 18:36:16 CET 2007
	- child watchers stopped working permanently when
          all current child watchers were destroyed.

2.51 Mon Dec 11 21:33:24 CET 2006
	- work around bugs in perl where eval "require Module" returns
          true even if the module couldn't be loaded :/.

2.5  Mon Dec 11 02:15:28 CET 2006
	- avoid $AUTOLOAD because many perls corrupt it.
        - AnyEvent::detect forces autodetection.
        - implement signal watchers (experimental)
          (Tk does not support async signals (<= 804.027 at least),
          so they might get delayed indefinitely on Tk).
        - implement child watchers (experimental).
        - moved default condvar implementation into base module, simplifying
          most implementation modules.

2.1  Fri Nov 24 15:50:48 CET 2006
	- better docs.
        - simple testsuite.
        - added AnyEvent->one_event method for special purposes.

2.0  Wed Nov  1 02:21:30 CET 2006
	- INCOMPATIBLE CHANGE: poll can now either be "r" or "w" but not both.
	- INCOMPATIBLE CHANGE: io watcher callbacks have no arguments anymore.
        - EXPERIMENTAL:
          new pure-perl model added, AnyEvent now always finds a suitable
          event model.
        - improved documentation.
        - reduced cpu overhead.

1.02 Fri Jan 13 14:15:40 CET 2006
	- add COPYING to clarify license.

1.01 Sun Jan  8 05:48:09 CET 2006
	- correctly cancel Event timers, avoid memory leaks.

1.0  Sun Jan  8 05:40:58 CET 2006
	- allow third-party interfaces to be added at runtime.
        - fix version number.

0.9  Fri Dec 30 02:25:41 CET 2005
	- fixed errors in the documentation.
        - going back to using $VERSION as "load check",
          as suggested by Jörn Reder. Let's see why I stopped using
          this method.
        - add 'hup' to the list of events to receive for glib
          and generate 'rw' events for it, as some versions of
          glib seem to require this, while this breaks other
          (older) versions of glib.
        - implemented PERL_ANYEVENT_VERBOSE env variable.

0.3   Sun Dec  4 10:43:33 CET 2005
        - no changes to the code.
	- fixed documentation.
        - clarified some corner cases.
        - vastly improved documentation with a long example.

0.2   Thu Dec  1 22:18:49 CET 2005
	- check whether a valid method was called, to avoid endless loops.
        - move condvars into their own class (cleaner, safer).
        - don't die when some modules are not available.
        - Tk is too broken to allow for words. Will work once Tk works.

0.1   Thu Dec  1 19:44:57 CET 2005
	- spiced up and cleaned up for release.

0.01  Tue Sep 21 18:12:09 CEST 2004
	- original version; copied from Convert::Scalar.

